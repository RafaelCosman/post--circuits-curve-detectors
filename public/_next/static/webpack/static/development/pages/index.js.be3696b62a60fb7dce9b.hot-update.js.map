{"version":3,"file":"static/webpack/static/development/pages/index.js.be3696b62a60fb7dce9b.hot-update.js","sources":["webpack:///./pages/tuning/index.js"],"sourcesContent":["import { Tooltip, Position } from 'evergreen-ui'\nimport React from 'react'\nimport { Surface, Text, ZoomedImg } from 'components/ui'\nimport { featureVis } from 'components/helpers'\n\nexport default class Tuning1 extends React.Component {\n  render() {\n    const neurons = [379, 406, 385, 343, 342, 388, 340, 330, 349]\n\n    const colors = [\n      `rgb(183,89,81)`,\n      `rgb(193,159,91)`,\n      `rgb(170,198,94)`,\n      `rgb(131,199,100)`,\n      `rgb(123,197,157)`,\n      `rgb(90,148,194)`,\n      `rgb(32,58,188)`,\n      `rgb(129,72,190)`,\n      `rgb(175,73,143)`,\n    ]\n\n    const neuronSize = 67\n    const border = 3\n\n    const Header = ({ children }) => (\n      <Surface borderBottom=\"1px solid rgba(0, 0, 0, 0.2)\" marginBottom={20}>\n        <Text size={600} marginBottom={5}>\n          {children}\n        </Text>\n      </Surface>\n    )\n\n    return (\n      <Surface\n        width={850}\n        marginY={20}\n        alignSelf=\"center\"\n        flexFlow=\"row\"\n        justifyContent=\"space-between\"\n      >\n        <Surface>\n          <Header>Neuron Responses to Rotated Dataset Examples</Header>\n\n          <Surface flexFlow=\"row\">\n            <Surface marginTop={10} marginRight={10}>\n              {neurons.map((neuron, index) => (\n                <Tooltip content={`mixed3b:${neuron}`} position={Position.LEFT}>\n                  <Surface\n                    overflow=\"hidden\"\n                    style={{ border: `${border}px solid ${colors[index]}` }}\n                    borderRadius={5}\n                    width={neuronSize}\n                    height={neuronSize}\n                    marginY={3}\n                  >\n                    <ZoomedImg\n                      size={neuronSize}\n                      style={{ borderRadius: 0 }}\n                      src={featureVis('inceptionv1', 'mixed3b', neuron)}\n                    />\n                  </Surface>\n                </Tooltip>\n              ))}\n            </Surface>\n\n            <img\n              width={400}\n              height={741}\n              src={require('./tuning-transparent.png')}\n            />\n          </Surface>\n        </Surface>\n\n        <Surface width={330} marginTop={60}>\n          <Text opacity={0.9} fontSize={14} lineHeight={1.3}>\n            We collect dataset examples that maximally activate neuron. We\n            rotate them by increments of 1 degree from 0 to 360 degrees and\n            record activations.\n          </Text>\n          <Text marginTop={20} opacity={0.9} fontSize={14} lineHeight={1.3}>\n            The activations are shifted so that the points where each neuron\n            responds are aligned. The curves are then averaged to create a\n            typical response curve.\n          </Text>\n          <img\n            width={300}\n            style={{ alignSelf: 'center', marginTop: 20 }}\n            src={require('./tuning-methodology.png')}\n          />\n        </Surface>\n      </Surface>\n    )\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AAAA;AACA;AAAA;AAEA;AAYA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AACA;AAOA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVA;AAqBA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;AAvFA;AACA;;;;;A","sourceRoot":""}